FROM  nvcr.io/nvidia/cudagl:11.2.0-base-ubuntu18.04

ARG TURBOVNC_VERSION=2.2.1
ARG VIRTUALGL_VERSION=2.6.1
ARG LIBJPEG_VERSION=1.5.2
ARG WEBSOCKIFY_VERSION=0.8.0
ARG NOVNC_VERSION=1.0.0
ARG VNCPASSWORD=nvidia

RUN dpkg --add-architecture i386 && \
        apt-get update && \
        apt-get -y upgrade && \
        apt-get install -y --no-install-recommends \
        build-essential \
        gcc-multilib \
        pkg-config \
        libxau-dev \
        libxdmcp-dev \
        libxcb1-dev \
        libxext-dev libxext-dev:i386 \
        libx11-dev libx11-dev:i386 \
        libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1 libxkbcommon-x11-0

# Install desktop
# Install VNC & build dependencies
# numpy accelerates NoVNC but can be removed
# Install applications
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
        xfce4 \
        ca-certificates \
        curl \
        libc6-dev \
        libglu1 libglu1:i386 \
        libsm6 \
        libxv1 libxv1:i386 \
        make \
        python \
        python-numpy \
        x11-xkb-utils \
        xauth \
        xfonts-base \
        xkb-data \
        git \
        nano \
        vim \
        emacs \
        mousepad \
        xfce4-terminal \
        libxkbcommon-x11-0

# Install ncu content dependencies (need newer gcc toolchain and one extra lib)
RUN DEBIAN_FRONTEND=noninteractive apt install -y \
	software-properties-common
RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test
RUN apt update -y
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
	gcc-9 \
	g++-9 \
	libliquid-dev

# Install web fonts
RUN echo ttf-mscorefonts-installer \
        msttcorefonts/accepted-mscorefonts-eula \
        select true \
        | debconf-set-selections && \
        apt-get install -y apt-transport-https msttcorefonts

# Optional: disable APT
# rm -rf /var/lib/apt/lists/*

# Configure desktop
ENV DISPLAY :1

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics,display

# Install TurboVNC
RUN cd /tmp && \
        curl -fsSL -O https://sourceforge.net/projects/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb \
        -O https://sourceforge.net/projects/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb \
        -O https://sourceforge.net/projects/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb \
        -O https://sourceforge.net/projects/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb && \
        dpkg -i *.deb && \
        rm -f /tmp/*.deb && \
        sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver
ENV PATH ${PATH}:/opt/VirtualGL/bin:/opt/TurboVNC/bin

# Install NoVNC
RUN curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt && \
        curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt && \
        mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC && \
        mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify && \
        cd /opt/websockify && make

# Insecure by default. TODO: randomize?
RUN mkdir -p /root/.vnc && echo "$VNCPASSWORD" | vncpasswd -f > /root/.vnc/passwd && chmod 0600 /root/.vnc/passwd

# Overlay file system with overrides
COPY fs /

# Default panel (otherwise prompted to initialize panel)
RUN cp /etc/xdg/xfce4/panel/default.xml /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml


# Install updated nsight-compute and nsight-systems and add to PATH
# Note: when changed, update in lab container, too
WORKDIR /build
RUN rm -rf /opt/nvidia/nsight-compute /opt/nvidia/nsight-systems
ADD https://developer.download.nvidia.com/devtools/repos/ubuntu1804/amd64/nsight-compute-2021.2.1_2021.2.1.2-1_amd64.deb .
ADD https://developer.download.nvidia.com/devtools/repos/ubuntu1804/amd64/NsightSystems-linux-public-2021.4.1.73-08591f7.deb .
RUN apt install -y ./nsight-compute-2021.2.1_2021.2.1.2-1_amd64.deb
RUN apt install -y ./NsightSystems-linux-public-2021.4.1.73-08591f7.deb
ENV PATH=/opt/nvidia/nsight-systems/2021.4.1/bin:/opt/nvidia/nsight-compute/2021.2.1:/usr/local/cuda-11.2/bin:${PATH}

ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-11.2/lib64

# Install Pytorch dependencies for nsys
RUN DEBIAN_FRONTEND=noninteractive apt-get update -y && apt-get install -y \
	python3-pip
RUN python3 -m pip install pip==19.3.1
RUN pip3 install torch==1.8.0+cu111 torchvision==0.9.0+cu111 torchaudio==0.8.0 -f https://download.pytorch.org/whl/torch_stable.html
# Add desktop icon for nsys
ADD NsightSystems.desktop /root/Desktop/NsightSystems.desktop
RUN chmod 777 /root/Desktop/NsightSystems.desktop

EXPOSE 5901

WORKDIR /root

ENTRYPOINT ["/opt/websockify/run", "5901", "--web=/opt/noVNC", "--wrap-mode=ignore", "--", "vncserver", ":1"]
